buildscript {
    ext {
        springBootVersion = "3.3.1" // org.springframework.boot
        springSecurityVersion = "6.3.1" // org.springframework.security
        springKafkaVersion = "3.2.1" // org.springframework.kafka
        apacheKafkaVersion = "3.7.0" // org.apache.kafka
        jacksonVersion = "2.17.1" // com.fasterxml.jackson.core
    }
}

plugins {
    id("java")
    id("org.springframework.boot").version("${springBootVersion}")
    id("io.spring.dependency-management").version("1.1.4")
}

group = "com.apiDataProcessor"
version = "2.3.0"

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

bootJar {
    enabled = false
}

subprojects {
    apply {
        plugin("java")
        plugin("org.springframework.boot")
        plugin("io.spring.dependency-management")
    }

    group = "com.apiDataProcessor"

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(21))
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
    }

    dependencies {

        implementation("org.springframework.boot:spring-boot-starter-web").version { require(springBootVersion) }
        implementation("org.springframework.boot:spring-boot-starter-webflux").version { require(springBootVersion) }
        implementation("org.springframework.boot:spring-boot-starter-security").version { require(springBootVersion) }
        implementation("org.springframework.security:spring-security-core").version { require(springSecurityVersion) }

        implementation("org.slf4j:slf4j-api:2.0.12")
        implementation("org.springframework.boot:spring-boot-starter-actuator").version { require(springBootVersion) }
        implementation("com.google.guava:guava:32.1.3-jre")

        compileOnly("org.projectlombok:lombok:1.18.30")

        developmentOnly("org.springframework.boot:spring-boot-devtools").version { require(springBootVersion) }

        annotationProcessor("org.projectlombok:lombok:1.18.30")

        testImplementation("org.springframework.boot:spring-boot-starter-test").version { require(springBootVersion) }
        testImplementation("org.mockito:mockito-junit-jupiter:5.7.0")
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}